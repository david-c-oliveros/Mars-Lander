#include "Lander.h"
#include "vendor/olcPixelGameEngine.h"


/**********************************/
/*        Global Variables        */
/**********************************/




/****************************/
/*        Game Class        */
/****************************/
class Game : public olc::PixelGameEngine
{
    public:
        Game()
        {
            sAppName = "Hello";
        }

        olc::Sprite* spr = nullptr;
        olc::Decal* dec = nullptr;
        Lander* marsLander = nullptr;
        olc::vf2d vGrav;
        olc::vf2d vDeltaVel;


    public:
        bool OnUserCreate() override
        {
            // Set gravity variable - will later encapsulate into gravity function

            marsLander = new Lander(50, 50);
            marsLander->setPos({ (float)ScreenWidth() / 2, 50 });
            this->vGrav = { 0.0, 1.0 };
            this->vDeltaVel = { 0.0, 0.0 };

            return true;
        }


        bool OnUserUpdate(float fElapsedTime) override
        {
            this->vDeltaVel = { 0.0, 0.0 };
            if (GetKey(olc::Key::NP0).bHeld) this->vDeltaVel += { 0.0, -1.5};

            this->vDeltaVel += this->vGrav;
            this->vDeltaVel *= fElapsedTime;

            Clear(olc::VERY_DARK_BLUE);

            marsLander->update(this->vDeltaVel);

            // Debug - Set Lander position to top of screen after it falls off the bottom
            if (marsLander->getPos().y > ScreenHeight())
            {
                marsLander->setPos({ (float)ScreenWidth() / 2, 50 });
                marsLander->setVel({ 0.0, 0.0 });
            }

            marsLander->draw(this);

            return true;
        }
};



/***************************/
/*        Functions        */
/***************************/



/**********************/
/*        Main        */
/**********************/
int main()
{
    Game demo;
    if (demo.Construct(1600,  1200, 1, 1))
    {
        demo.Start();
    }
    return 0;
}
